{"ast":null,"code":"var _jsxFileName = \"C:\\\\yoniP\\\\ap2-ex2\\\\Client\\\\src\\\\Chats\\\\Right\\\\Right.js\",\n  _s = $RefreshSig$();\nimport './Right.css';\nimport ActiveContact from './ActiveContact/ActiveContact';\nimport ActiveChat from './ActiveChat/ActiveChat';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction convertToDate(timeString) {\n  if (timeString === '') {\n    return new Date(0);\n  }\n  const [datePart, timePart] = timeString.split(', ');\n  const [day, month, year] = datePart.split('.');\n  const [hour, minute, second] = timePart.split(':');\n  return new Date(`${month}/${day}/${year} ${hour}:${minute}:${second}`);\n}\nfunction Right(_ref) {\n  _s();\n  let {\n    p,\n    image,\n    contactList,\n    setContactList\n  } = _ref;\n  const [inputValue, setInputValue] = useState('');\n  const contact = contactList.find(obj => obj.display === p);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleButtonClick();\n    }\n  };\n  const handleButtonClick = () => {\n    if (inputValue !== '') {\n      const date = new Date();\n      const hours = date.getHours();\n      const minutes = date.getMinutes();\n      const formattedTime = `${hours}:${minutes < 10 ? '0' : ''}${minutes}`;\n      const newMessage = {\n        text: inputValue,\n        time: formattedTime,\n        classname: 'message-box my-message'\n      };\n\n      // Update the contact's messages array by creating a new array with the new message\n      const updatedContact = {\n        ...contact,\n        date: `${date.toLocaleDateString()}, ${date.toLocaleTimeString()}`,\n        messages: [...contact.messages, newMessage]\n      };\n\n      // Find the index of the contact in the contactList array\n      const contactIndex = contactList.findIndex(obj => obj.display === p);\n\n      // Create a new contactList array with the updated contact\n      const updatedContactList = [...contactList];\n      updatedContactList[contactIndex] = updatedContact;\n\n      // Update the contactList state with the updated array\n      setContactList(updatedContactList);\n      setInputValue('');\n\n      // Get the active chat element\n      const activeContact = document.querySelector('.active');\n      const dateElement = activeContact.querySelector('.date');\n      const formattedDate = `${date.toLocaleDateString()}, ${date.toLocaleTimeString()}`;\n      dateElement.innerHTML = formattedDate;\n      updatedContactList.sort((a, b) => {\n        const timeA = convertToDate(a.date);\n        const timeB = convertToDate(b.date);\n        return timeB - timeA;\n      });\n      console.log(updatedContactList);\n      setContactList(updatedContactList);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ActiveContact, {\n      name: p,\n      img: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), contact && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ActiveChat, {\n        Messages: contact.messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-aaa fff\",\n        id: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message\",\n          id: \"message-input\",\n          value: inputValue,\n          onChange: handleInputChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info\",\n          onClick: handleButtonClick,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-send-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Right, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n_c = Right;\nexport default Right;\nvar _c;\n$RefreshReg$(_c, \"Right\");","map":{"version":3,"names":["ActiveContact","ActiveChat","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","convertToDate","timeString","Date","datePart","timePart","split","day","month","year","hour","minute","second","Right","_ref","_s","p","image","contactList","setContactList","inputValue","setInputValue","contact","find","obj","display","handleInputChange","event","target","value","handleKeyPress","key","handleButtonClick","date","hours","getHours","minutes","getMinutes","formattedTime","newMessage","text","time","classname","updatedContact","toLocaleDateString","toLocaleTimeString","messages","contactIndex","findIndex","updatedContactList","activeContact","document","querySelector","dateElement","formattedDate","innerHTML","sort","a","b","timeA","timeB","console","log","children","name","img","fileName","_jsxFileName","lineNumber","columnNumber","Messages","className","id","type","placeholder","onChange","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["C:/yoniP/ap2-ex2/Client/src/Chats/Right/Right.js"],"sourcesContent":["import './Right.css'\r\nimport ActiveContact from './ActiveContact/ActiveContact';\r\nimport ActiveChat from './ActiveChat/ActiveChat';\r\nimport React, { useState } from 'react';\r\n\r\nfunction convertToDate(timeString) {\r\n  if(timeString === ''){\r\n    return new Date(0);\r\n  }\r\n  const [datePart, timePart] = timeString.split(', ');\r\n  const [day, month, year] = datePart.split('.');\r\n  const [hour, minute, second] = timePart.split(':');\r\n\r\n  return new Date(`${month}/${day}/${year} ${hour}:${minute}:${second}`);\r\n}\r\n\r\n\r\nfunction Right({ p, image, contactList, setContactList}) {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const contact = contactList.find(obj => obj.display === p);\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleButtonClick();\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    if (inputValue !== '') {\r\n      const date = new Date();\r\n      const hours = date.getHours();\r\n      const minutes = date.getMinutes();\r\n      const formattedTime = `${hours}:${minutes < 10 ? '0' : ''}${minutes}`;\r\n      const newMessage = { text: inputValue, time: formattedTime, classname: 'message-box my-message' };\r\n  \r\n      // Update the contact's messages array by creating a new array with the new message\r\n      const updatedContact = { ...contact, date: `${date.toLocaleDateString()}, ${date.toLocaleTimeString()}`,  messages: [...contact.messages, newMessage] };\r\n  \r\n      // Find the index of the contact in the contactList array\r\n      const contactIndex = contactList.findIndex(obj => obj.display === p);\r\n  \r\n      // Create a new contactList array with the updated contact\r\n      const updatedContactList = [...contactList];\r\n      updatedContactList[contactIndex] = updatedContact;\r\n  \r\n      // Update the contactList state with the updated array\r\n      setContactList(updatedContactList);\r\n  \r\n      setInputValue('');\r\n  \r\n      // Get the active chat element\r\n      const activeContact = document.querySelector('.active');\r\n      const dateElement = activeContact.querySelector('.date');\r\n      const formattedDate = `${date.toLocaleDateString()}, ${date.toLocaleTimeString()}`;\r\n      dateElement.innerHTML = formattedDate;\r\n  \r\n\r\n      updatedContactList.sort((a, b) => {\r\n        const timeA = convertToDate(a.date);\r\n        const timeB = convertToDate(b.date);\r\n      \r\n        return timeB - timeA;\r\n      });\r\n      console.log(updatedContactList);\r\n      setContactList(updatedContactList);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <ActiveContact name={p} img={image} />\r\n    {contact && (\r\n      <>\r\n        <ActiveChat Messages={contact.messages} />\r\n        <div className=\"row-aaa fff\" id=\"footer\">\r\n          <input type=\"text\" placeholder=\"Type a message\" id=\"message-input\" value={inputValue} onChange={handleInputChange} onKeyPress={handleKeyPress}/>\r\n          <button type=\"button\" className=\"btn btn-info\" onClick={handleButtonClick}>\r\n            <i className=\"bi bi-send-fill\" />\r\n          </button>\r\n        </div>\r\n      </>\r\n    )}\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Right;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}