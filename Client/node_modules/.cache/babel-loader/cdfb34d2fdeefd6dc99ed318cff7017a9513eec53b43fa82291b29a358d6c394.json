{"ast":null,"code":"var _jsxFileName = \"C:\\\\yoniP\\\\ap2-ex2\\\\Client\\\\src\\\\Chats\\\\Left\\\\ContactListResult\\\\ContactListResult.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Contact from '../Contact/Contact';\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactListResult(_ref) {\n  _s();\n  let {\n    contacts,\n    setContactList,\n    token\n  } = _ref;\n  console.log(\"this is:\");\n  console.log(contacts);\n  const attachEventListeners = () => {\n    const chats = document.getElementsByClassName('chats');\n\n    // Add a click event listener to each button\n    for (let i = 0; i < chats.length; i++) {\n      chats[i].addEventListener('click', function () {\n        // Remove the \"active\" class from all buttons\n        for (let j = 0; j < chats.length; j++) {\n          if (chats[j].classList.contains('active')) {\n            chats[j].classList.remove('active');\n          }\n        }\n\n        // Add the \"active\" class to the button that was pressed\n        this.classList.add('active');\n      });\n    }\n  };\n\n  // Attach event listeners after the component renders\n  useEffect(() => {\n    attachEventListeners();\n  }, [contacts]);\n  const userMap = new Map();\n  const uniqueContacts = [];\n\n  // Iterate over contacts to extract unique users\n  for (let i = 0; i < contacts.length; i++) {\n    const contact = contacts[i];\n    const userId = contact.id;\n    const user = contact.user;\n\n    // Check if the user is already added to the map\n    if (!userMap.has(userId)) {\n      userMap.set(userId, user);\n      uniqueContacts.push(contact);\n    }\n  }\n  const contactList = uniqueContacts.map(contact => /*#__PURE__*/_createElement(Contact, {\n    ...contact.user,\n    key: contact.id,\n    token: token,\n    id: userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users_list\",\n    children: contactList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n}\n_s(ContactListResult, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ContactListResult;\nexport default ContactListResult;\nvar _c;\n$RefreshReg$(_c, \"ContactListResult\");","map":{"version":3,"names":["React","useEffect","Contact","createElement","_createElement","jsxDEV","_jsxDEV","ContactListResult","_ref","_s","contacts","setContactList","token","console","log","attachEventListeners","chats","document","getElementsByClassName","i","length","addEventListener","j","classList","contains","remove","add","userMap","Map","uniqueContacts","contact","userId","id","user","has","set","push","contactList","map","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/yoniP/ap2-ex2/Client/src/Chats/Left/ContactListResult/ContactListResult.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport Contact from '../Contact/Contact';\r\n\r\n\r\nfunction ContactListResult({ contacts, setContactList, token }) {\r\n  console.log(\"this is:\");\r\n  console.log(contacts);\r\n  const attachEventListeners = () => {\r\n    const chats = document.getElementsByClassName('chats');\r\n\r\n    // Add a click event listener to each button\r\n    for (let i = 0; i < chats.length; i++) {\r\n      chats[i].addEventListener('click', function () {\r\n        // Remove the \"active\" class from all buttons\r\n        for (let j = 0; j < chats.length; j++) {\r\n          if (chats[j].classList.contains('active')) {\r\n            chats[j].classList.remove('active');\r\n          }\r\n        }\r\n\r\n        // Add the \"active\" class to the button that was pressed\r\n        this.classList.add('active');\r\n      });\r\n    }\r\n  };\r\n\r\n  // Attach event listeners after the component renders\r\n  useEffect(() => {\r\n    attachEventListeners();\r\n  }, [contacts]);\r\n\r\n  const userMap = new Map();\r\n  const uniqueContacts = [];\r\n\r\n  // Iterate over contacts to extract unique users\r\n  for (let i = 0; i < contacts.length; i++) {\r\n    const contact = contacts[i];\r\n    const userId = contact.id;\r\n    const user = contact.user;\r\n\r\n    // Check if the user is already added to the map\r\n    if (!userMap.has(userId)) {\r\n      userMap.set(userId, user);\r\n      uniqueContacts.push(contact);\r\n    }\r\n  }\r\n\r\n  const contactList = uniqueContacts.map((contact) => (\r\n    <Contact {...contact.user} key={contact.id} token={token} id={userId}/>\r\n  ));\r\n\r\n  return <div className=\"users_list\">{contactList}</div>;\r\n}\r\n\r\nexport default ContactListResult;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,aAAA,IAAAC,cAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzC,SAASC,iBAAiBA,CAAAC,IAAA,EAAsC;EAAAC,EAAA;EAAA,IAArC;IAAEC,QAAQ;IAAEC,cAAc;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EAC5DK,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvBD,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACrB,MAAMK,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,KAAK,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,OAAO,CAAC;;IAEtD;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACrCH,KAAK,CAACG,CAAC,CAAC,CAACE,gBAAgB,CAAC,OAAO,EAAE,YAAY;QAC7C;QACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,KAAK,CAACI,MAAM,EAAEE,CAAC,EAAE,EAAE;UACrC,IAAIN,KAAK,CAACM,CAAC,CAAC,CAACC,SAAS,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACzCR,KAAK,CAACM,CAAC,CAAC,CAACC,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;UACrC;QACF;;QAEA;QACA,IAAI,CAACF,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC;MAC9B,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACAzB,SAAS,CAAC,MAAM;IACdc,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,MAAMiB,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;EACzB,MAAMC,cAAc,GAAG,EAAE;;EAEzB;EACA,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,QAAQ,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;IACxC,MAAMW,OAAO,GAAGpB,QAAQ,CAACS,CAAC,CAAC;IAC3B,MAAMY,MAAM,GAAGD,OAAO,CAACE,EAAE;IACzB,MAAMC,IAAI,GAAGH,OAAO,CAACG,IAAI;;IAEzB;IACA,IAAI,CAACN,OAAO,CAACO,GAAG,CAACH,MAAM,CAAC,EAAE;MACxBJ,OAAO,CAACQ,GAAG,CAACJ,MAAM,EAAEE,IAAI,CAAC;MACzBJ,cAAc,CAACO,IAAI,CAACN,OAAO,CAAC;IAC9B;EACF;EAEA,MAAMO,WAAW,GAAGR,cAAc,CAACS,GAAG,CAAER,OAAO,iBAC7C1B,cAAA,CAACF,OAAO;IAAA,GAAK4B,OAAO,CAACG,IAAI;IAAEM,GAAG,EAAET,OAAO,CAACE,EAAG;IAACpB,KAAK,EAAEA,KAAM;IAACoB,EAAE,EAAED,MAAO;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACvE,CAAC;EAEF,oBAAOvC,OAAA;IAAKwC,SAAS,EAAC,YAAY;IAAAC,QAAA,EAAEV;EAAW;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACxD;AAACpC,EAAA,CAhDQF,iBAAiB;AAAAyC,EAAA,GAAjBzC,iBAAiB;AAkD1B,eAAeA,iBAAiB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}